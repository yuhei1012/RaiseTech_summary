version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@3.1.5
  ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - restore_cache:  # pipキャッシュを復元
          keys:
            - v1-pip-cache-{{ checksum "requirements.txt" }}
            - v1-pip-cache-
      - run: pip install cfn-lint
      - save_cache:  # pipキャッシュを保存
          key: v1-pip-cache-{{ checksum "requirements.txt" }}
          paths:
            - ~/.cache/pip
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t lecture13/*.yml

  cfn-execute:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Deploy Network Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/lecture13_cfn_network.yml \
              --stack-name MyNetworkStack
      - run:
          name: Deploy Network Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/lecture13_cfn_network.yml \
              --stack-name MyNetworkStack
      - run:
          name: Deploy EC2 Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/lecture13_cfn_ec2.yml \
              --stack-name MyEC2Stack \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: Deploy ALB Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/lecture13_ALB.yml \
              --stack-name MyALBStack
      - run:
          name: Deploy RDS Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/lecture13_cfn_RDS.yml \
              --stack-name MyRDSStack
      - run:
          name: Deploy S3 Stack
          command: |
            aws cloudformation deploy \
              --template-file lecture13/yaml_S3.yml \
              --stack-name MyS3Stack

  # Ansibleの実行ジョブ
  execute-ansible:
    executor: python/default
    steps:
      - checkout
      - restore_cache:  # ansible-galaxyのキャッシュを復元
          keys:
            - v1-ansible-galaxy-cache-{{ checksum "requirements.yml" }}
            - v1-ansible-galaxy-cache-
      - ansible-playbook/install:
          version: 2.9.27
      - run:
          name: Set up SSH Key
          command: |
            echo "$ANSIBLE_PRIVATE_KEY" > ~/.ssh/t123456.pem
            chmod 600 ~/.ssh/t123456.pem
      - run:
          name: Verify SSH Key Exists
          command: ls -l ~/.ssh/t123456.pem
      - add_ssh_keys:
          fingerprints:
            - "SHA256:gQOPoizFS1RyIloUBqB19GphWuByvslPGm6xS2ZJgC0"
      - run:
          name: Install community.mysql Collection
          command: |
            ansible-galaxy collection install community.mysql
      - save_cache:  # ansible-galaxyのキャッシュを保存
          key: v1-ansible-galaxy-cache-{{ checksum "requirements.yml" }}
          paths:
            - ~/.ansible
      - run:
          name: Run Ansible Playbook
          command: |
            ansible-playbook -i Ansible/inventory Ansible/playbook.yml -u ec2-user --private-key ~/.ssh/t123456.pem --ssh-common-args='-o StrictHostKeyChecking=no'

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - cfn-lint
      - cfn-execute:
          requires:
            - cfn-lint
      - execute-ansible:
          requires:
            - cfn-execute


